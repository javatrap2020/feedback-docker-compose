version: '3.7'

services:
  feedback-server:
    build: .
    #image: javatrap/it-cluster-feedback-frontend-b
    container_name: "it-cluster-feedback-frontend-b"
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - db_m
    environment:
      URL_SQL: database-feedback-mysql-1.c3flf4yezuf3.eu-west-2.rds.amazonaws.com
      SQL_DATABASE: feedback
      SQL_USERNAME: admin
      SQL_PASSWORD: passpass

      MONGO_USERNAME: root
      MONGO_PASSWORD: pass
      MONGO_DATABASE: feedback
      MONGO_HOST: db_m
    hostname: feedback-server
    networks:
      - backend
      - frontend
    tty: true
    command: bash /root/src/feedback-server.bash


  feedback-client:
    image: javatrap/it-cluster-feedback-frontend-a
    container_name: "it-cluster-feedback-frontend-a"
    ports:
      - "4200:4200"
    restart: always
    depends_on:
      - feedback-server
    hostname: feedback-client
    links:
      - feedback-server
    networks:
      - frontend
    tty: true
    #command: bash /root/src/feedback-client.bash

  db_m:
    image: mongo:latest
    container_name: "mongo_db"
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_USERNAME: root
      MONGO_PASSWORD: pass
      MONGO_DATABASE: feedback
      MONGO_HOST: db_m
    hostname: db_m
    volumes:
      #- ./data/db:/data/db
      #- ./data/db:/data/db
      - db_m-data:/data/db
    #links:
      #- db_m:/data/db
      #- db_m-data:/var/lib/mongodb/
      #- volumes:
        #  - ./data/db:/var/lib/mongodb/data/db
        #command:
        #  /mongo-seed/import.sh
    networks:
      - backend
      - frontend
    tty: true
    #command: bash /root/src/db_m.bash
    #command: mongo -u root -p pass --authenticationDatabase admin
    command: mongo -u root -p pass --authenticationDatabase feedback

volumes:
  db_m-data:

networks:
  backend:
  frontend: